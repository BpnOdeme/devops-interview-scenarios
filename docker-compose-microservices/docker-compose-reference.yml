# Reference Docker Compose Configuration
# This is a working example for a microservices architecture

version: '3.8'

services:
  frontend:
    image: nginx:alpine
    container_name: frontend
    ports:
      - "80:80"
    depends_on:
      - api
    networks:
      - app-network
    volumes:
      - ./html:/usr/share/nginx/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    restart: unless-stopped

  api:
    image: node:14-alpine
    container_name: api
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DB_HOST=db
      - DB_PORT=3306
      - DB_USER=appuser
      - DB_PASSWORD=apppass
      - DB_NAME=appdb
      - REDIS_HOST=cache
      - REDIS_PORT=6379
      - REDIS_PASSWORD=secretpass
    depends_on:
      - db
      - cache
    networks:
      - app-network
    volumes:
      - ./api:/app
      - /app/node_modules  # Prevent overwriting node_modules
    command: sh -c "npm install && npm start"
    working_dir: /app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: mysql:8.0
    container_name: database
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: appdb
      MYSQL_USER: appuser
      MYSQL_PASSWORD: apppass
    ports:
      - "3306:3306"
    networks:
      - app-network
    volumes:
      - db-data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # Optional: initialization script
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-psecret"]
      interval: 30s
      timeout: 10s
      retries: 3

  cache:
    image: redis:6-alpine
    container_name: redis-cache
    ports:
      - "6379:6379"
    networks:
      - app-network
    command: redis-server --requirepass secretpass --appendonly yes
    volumes:
      - cache-data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "secretpass", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16

volumes:
  db-data:
    driver: local
  cache-data:
    driver: local